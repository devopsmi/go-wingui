package main

import (
	"encoding/json"
	"fmt"
	"os"
	"os/exec"
	"os/signal"

	"path/filepath"
	"strings"
	"syscall"

	ini "github.com/go-ini/ini"
)

type Settings struct {
	SrvURL      string
	Width       int32
	Height      int32
	Title       string
	URL         string
	AppPid      int
	LauncherPid int
}

var (
	srvPath  = "../srv/srv.exe"
	cefPath  = "../../Release/cef.exe"
	cfg, err = ini.LoadSources(ini.LoadOptions{AllowBooleanKeys: true}, "launcher.ini")
	cmdSrv   *exec.Cmd
	cmdApp   *exec.Cmd
	cmdCEF   *exec.Cmd
	wd, _    = os.Getwd()
)

func init() {
	if err != nil {
		fmt.Println(err)
		os.Exit(1)
	}
	srvPath = filepath.Join(wd, filepath.Join(srvPath))
	cefPath = filepath.Join(wd, filepath.Join(cefPath))
}
func main() {
	_title, _ := cfg.Section("").GetKey("app_title")
	_url, _ := cfg.Section("").GetKey("start_url")
	_width, _ := cfg.Section("").GetKey("window_width")
	_height, _ := cfg.Section("").GetKey("window_height")

	srvURL := startSrv()
	//fmt.Print(srvURL)
	startApp()
	w, _ := _width.Int()
	h, _ := _height.Int()
	startCEF(srvURL, _title.String(), _url.String(), w, h)
	startTray()
	Clean()
}
func startTray() {

}
func startCEF(srvURL, title, url0 string, width, height int) {
	settings := Settings{
		Title:       title,
		URL:         url0,
		SrvURL:      srvURL,
		Width:       int32(width),
		Height:      int32(height),
		AppPid:      cmdApp.Process.Pid,
		LauncherPid: os.Getpid(),
	}
	cmdCEF = exec.Command(cefPath)
	cmdCEF.Dir = filepath.Dir(cefPath)
	out, err := cmdCEF.StdinPipe()
	if err != nil {
		fmt.Printf("ERR:%s", err)
		killALl()
		os.Exit(1)
	}
	err = cmdCEF.Start()
	if err != nil {
		fmt.Printf("ERR:%s", err)
		killALl()
		os.Exit(1)
	}
	b, _ := json.Marshal(settings)
	_, err = out.Write(b)
	if err != nil {
		fmt.Printf("ERR:%s", err)
		killALl()
		os.Exit(1)
	}
}
func startSrv() string {
	buf := make([]byte, 100)
	cmdSrv = exec.Command(srvPath)
	cmdSrv.Dir = filepath.Dir(srvPath)
	outp, _ := cmdSrv.StdoutPipe()
	err := cmdSrv.Start()
	if err != nil {
		fmt.Printf("ERR:%s", err)
		killALl()
		os.Exit(1)
	}
	n, _ := outp.Read(buf)
	return fmt.Sprintf("%s", string(buf[:n]))
}

func startApp() {
	argsString, _ := cfg.Section("").GetKey("start_exec")
	if argsString.String() == "" {
		return
	}
	args := strings.Split(argsString.String(), " ")
	app, _ := filepath.Abs(args[0])
	cmdSrv.Dir = filepath.Dir(app)
	if len(args) > 1 {
		cmdApp = exec.Command(app, args[1:]...)
	} else {
		cmdApp = exec.Command(app)
	}
	cmdSrv.Dir = filepath.Dir(cefPath)
	err := cmdApp.Start()
	if err != nil {
		fmt.Printf("ERR:%s", err)
		killALl()
		os.Exit(1)
	}
}
func Clean() {
	signalChan := make(chan os.Signal, 1)
	cleanupDone := make(chan bool)
	signal.Notify(signalChan,
		os.Interrupt,
		syscall.SIGHUP,
		syscall.SIGINT,
		syscall.SIGTERM,
		syscall.SIGQUIT)
	go func() {
		for _ = range signalChan {
			fmt.Println("\nReceived an interrupt, stopping services...")
			killALl()
			cleanupDone <- true
		}
	}()
	<-cleanupDone
}
func killALl() {
	if cmdApp != nil && cmdApp.Process != nil {
		fmt.Printf("\nclean app process %d", cmdApp.Process.Pid)
		cmdApp.Process.Kill()
	}
	if cmdSrv != nil && cmdSrv.Process != nil {
		fmt.Printf("\nclean srv process %d", cmdSrv.Process.Pid)
		cmdSrv.Process.Kill()
	}
	if cmdCEF != nil && cmdCEF.Process != nil {
		fmt.Printf("\nclean cef process %d", cmdCEF.Process.Pid)
		cmdCEF.Process.Kill()
	}
}
func iconStr() string {
	return "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qQf///8A////AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD///////8AAP///n///wAA//+AAf//AAD//AAAf/8AAP/wAAAP/wAA/+AAAAf/AAD/gAAAA/8AAP8AAAAB/wAA/gAAAAD/AAD+AAAAAH8AAPwAAAAAPwAA+AAAAAAfAADwAAAAAB8AAPAAAAAADwAA4AAAAAAPAADgAAAAAAcAAOAAAAAABwAAwAAAAAADAADAAAAAAAMAAMAAAAAAAwAAwAAAAAADAACAAAAAAAMAAIAAAAAAAwAAgAAAAAABAACAAAAAAAEAAIAAAAAAAwAAgAAAAAADAADAAAAAAAMAAMAAAAAAAwAAwAAAAAADAADAAAAAAAMAAOAAAAAABwAA4AAAAAAHAADgAAAAAAcAAPAAAAAADwAA8AAAAAAfAAD4AAAAAB8AAPwAAAAAPwAA/AAAAAB/AAD+AAAAAH8AAP8AAAAA/wAA/4AAAAH/AAD/4AAAB/8AAP/wAAAP/wAA//wAAD//AAD//wAB//8AAP//8A///wAA////////AAA="
}
